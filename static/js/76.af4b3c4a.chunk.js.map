{"version":3,"file":"static/js/76.af4b3c4a.chunk.js","mappings":"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","sources":["components/AdvertCard/AdvertCard.styled.jsx","components/AdvertDetail/AdvertDetail.styled.jsx","components/AdvertDetail/AdvertDetail.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Favorite/FavoriteItem.jsx","components/Favorite/FavoriteList.jsx","components/hooks/useFavoriteadverts.jsx","pages/FavoritePage.jsx"],"sourcesContent":["import {\n  Button,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\nexport const CardHeading = styled(Heading)`\n  display: flex;\n  justify-content: space-between;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: var(--primary-black);\n`;\nexport const WrapperImg = styled(CardHeader)`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\nexport const WrapperBody = styled(CardBody)`\n  padding-left: 40px;\n  padding-right: 40px;\n  margin-bottom: 48px;\n\n  @media screen and (min-width: 768px) {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`;\n\nexport const FooterWrapper = styled(CardFooter)`\n  display: flex;\n  justify-content: center;\n`;\nexport const WrapperHeading = styled.span`\n  height: 50px;\n`;\nexport const Span = styled.span`\n  color: var(--primary-blue);\n`;\nexport const PriceSpan = styled.span``;\nexport const CardText = styled.p`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  height: 40px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 150%;\n  color: rgba(18, 20, 23, 0.5);\n`;\nexport const CardButton = styled.button`\n  width: 274px;\n  background-color: var(--primary-blue);\n  border-radius: 12px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 143%;\n\n  &:hover {\n    background-color: var(--active-blue);\n  }\n`;\n\nexport const FavoriteButton = styled(Button)`\n  position: absolute;\n  top: -470px;\n  left: 260px;\n  width: 40px;\n  background-color: transparent;\n  border: 0px;\n  outline: none;\n\n  @media screen and (min-width: 1440px) {\n    top: -470px;\n    left: 230px;\n  }\n  .icon-favorite {\n    fill: var(--primary-blue);\n    width: 18px;\n    height: 18px;\n  }\n`;\nexport const CatalogWrapper = styled(SimpleGrid)`\n  display: grid;\n  grid-template-columns: repeat(1, minmax(274px, 1fr));\n  width: 350px;\n  margin-bottom: 30px;\n  column-gap: 30px;\n  row-gap: 50px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 750px;\n    grid-template-columns: repeat(2, minmax(274px, 1fr));\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1200px;\n    grid-template-columns: repeat(4, minmax(274px, 1fr));\n  }\n`;\nexport const ButtonWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n","import { Card, CardFooter, Heading, Image, List } from \"@chakra-ui/react\";\nimport styled from \"styled-components\";\n\nexport const WrapperHeadingDetail = styled.span``;\nexport const CardDetails = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ImageDetails = styled(Image)`\n  object-fit: cover;\n  border-radius: 14px;\n  width: 320px;\n  @media screen and (min-width: 768px) {\n    width: 461px;\n  }\n`;\nexport const CardDescription = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 143%;\n  margin-bottom: 24px;\n`;\nexport const DescriptionsHeading = styled(Heading)`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 143%;\n`;\nexport const AccessoriesList = styled(List)`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  margin-bottom: 24px;\n  padding: 0;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 150%;\n  color: rgba(18, 20, 23, 0.5);\n`;\nexport const Conditions = styled.p`\n  display: flex;\n  gap: 10px;\n  justify-content: flex-start;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 150%;\n  color: var(--secondary-black);\n`;\nexport const RentButton = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 168px;\n  background-color: var(--primary-blue);\n  border-radius: 12px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 143%;\n\n  &:hover {\n    background-color: var(--active-blue);\n  }\n`;\nexport const ButtonWrapper = styled(CardFooter)`\n  display: flex;\n  width: 100%;\n  justify-content: flex-start;\n`;\nexport const SpanConditions = styled.span`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 150%;\n  letter-spacing: -0.02em;\n  color: var(secondary-black);\n`;\nexport const SpanConditionsAccent = styled.span`\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 150%;\n  letter-spacing: -0.02em;\n  color: var(--primary-blue);\n`;\n","import { CardBody, CardHeader, Heading, ListItem } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { CardText, Span } from \"../AdvertCard/AdvertCard.styled\";\nimport {\n  AccessoriesList,\n  ButtonWrapper,\n  CardDescription,\n  CardDetails,\n  Conditions,\n  DescriptionsHeading,\n  ImageDetails,\n  RentButton,\n  SpanConditions,\n  SpanConditionsAccent,\n} from \"./AdvertDetail.styled\";\n\nconst AdvertDetails = ({ advert }) => {\n  const {\n    id,\n    year,\n    make,\n    model,\n    fuelConsumption,\n    address,\n    engineSize,\n    type,\n    description,\n    functionalities,\n    mileage,\n    rentalPrice,\n  } = advert;\n  const { img } = advert;\n  return (\n    <>\n      <CardDetails key={id}>\n        <CardHeader>\n          <ImageDetails src={img} alt={model} />\n        </CardHeader>\n        <CardBody marginBottom={\"28px\"}>\n          <Heading>\n            {make}\n            <Span> {model}, </Span>\n            {year}\n          </Heading>\n          <CardText>\n            {address}|id:{id}|year:{year}|type:{type}|FuelConsumption\n            {fuelConsumption}|engineSize:{engineSize}\n          </CardText>\n          <CardDescription>{description}</CardDescription>\n          <DescriptionsHeading>\n            Accessories and functionalities:\n          </DescriptionsHeading>\n          <AccessoriesList>\n            {functionalities?.map((item) => (\n              <ListItem>{item} | </ListItem>\n            ))}\n          </AccessoriesList>\n          <DescriptionsHeading>Rental Conditions:</DescriptionsHeading>\n          <Conditions>\n            <SpanConditions>Minimum age:</SpanConditions>\n            <SpanConditionsAccent>25</SpanConditionsAccent>\n            <SpanConditions>valid driver license</SpanConditions>\n            <SpanConditions>Security deposite required </SpanConditions>\n            <SpanConditions>mileage</SpanConditions>\n            <SpanConditionsAccent>{mileage}</SpanConditionsAccent>\n            <SpanConditions>Price</SpanConditions>\n            <SpanConditionsAccent>{rentalPrice}</SpanConditionsAccent>\n          </Conditions>\n        </CardBody>\n        <ButtonWrapper>\n          <RentButton>Rental car</RentButton>\n        </ButtonWrapper>\n      </CardDetails>\n    </>\n  );\n};\n\nexport default AdvertDetails;\n","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  background: rgb(0, 0, 0, 0.5);\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n\n  .modal {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    overflow: hidden;\n    overflow: auto;\n    padding: 30px;\n    border-radius: 24px;\n    background-color: #fff;\n    width: 350px;\n    height: 80%;\n\n    @media screen and (min-width: 768px) {\n      width: 541px;\n      height: 90%;\n    }\n    @media screen and (min-width: 1440px) {\n      height: auto;\n    }\n  }\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    font-size: 26px;\n    font-weight: 600;\n\n    button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0;\n      background-color: transparent;\n      border: none;\n\n      transition: transform 350ms ease-in-out;\n\n      &:hover {\n        transform: rotate(90deg);\n      }\n      .modal-icon {\n        width: 24px;\n        height: 24px;\n        stroke-width: 1.8px;\n        stroke: #121417;\n      }\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { Overlay } from './Modal.styled';\nimport Icon from '../Icon/Icon';\n\n\nconst Modal = ({\n  setVisible,  \n  children\n}) => {\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.code === 'Escape') {\n        setVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setVisible]);\n\n  const handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      setVisible(false);\n    }\n  };\n\n  return (\n    <Overlay\n      onClick={handleBackdropClick}>  \n    \n      <div\n        className=\"modal\"\n        \n      >\n        <div\n          className=\"header\"         \n        >\n         \n          <button onClick={() => setVisible(false)}>\n            <Icon className=\"modal-icon\" id=\"close\" />\n          </button>\n        </div>\n        {children}\n      </div>\n    </Overlay>\n  );\n};\n\nexport default Modal;","import { Image } from \"@chakra-ui/react\";\nimport {\n  CardButton,\n  CardHeading,\n  CardText,\n  FavoriteButton,\n  FooterWrapper,\n  PriceSpan,\n  Span,\n  WrapperBody,\n  WrapperHeading,\n  WrapperImg,\n} from \"../AdvertCard/AdvertCard.styled\";\nimport Icon from \"../Icon/Icon\";\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport AdvertDetails from \"../AdvertDetail/AdvertDetail\";\n\nconst FavoriteItem = ({ favoriteAdvert, removeFavoriteById }) => {\n  const {\n    id,\n    year,\n    make,\n    model,\n    img,\n    rentalPrice,\n    address,\n    rentalCompany,\n    type,\n    mileage,\n    functionalities,\n  } = favoriteAdvert;\n\n  const firstFunctionalities = functionalities[0];\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleModal = () => {\n    setIsVisible(!isVisible);\n  };\n  return (\n    <>\n      <WrapperImg>\n        <Image\n          alignSelf={\"center\"}\n          boxSize=\"274px\"\n          objectFit=\"cover\"\n          borderRadius=\"14px\"\n          src={img}\n          alt={model}\n        />\n      </WrapperImg>\n      <WrapperBody>\n        <CardHeading>\n          <WrapperHeading>\n            {make}\n            <Span> {model}, </Span>\n            {year}\n          </WrapperHeading>\n          <PriceSpan>{rentalPrice}</PriceSpan>\n        </CardHeading>\n        <CardText>\n          {address}| {rentalCompany}|{type}|{model}|{mileage}|{\" \"}\n          {firstFunctionalities}\n        </CardText>\n      </WrapperBody>\n      <FooterWrapper>\n        <CardButton onClick={toggleModal}>Learn More</CardButton>\n      </FooterWrapper>\n\n      <FavoriteButton type=\"button\" onClick={() => removeFavoriteById(id)}>\n        <Icon className=\"icon-favorite\" id=\"active\" />\n      </FavoriteButton>\n\n      {isVisible && (\n        <Modal setVisible={toggleModal}>\n          <AdvertDetails advert={favoriteAdvert} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default FavoriteItem;\n","import { useFavoriteAdverts } from \"../hooks/useFavoriteadverts\";\nimport { Card, Container } from \"@chakra-ui/react\";\nimport FavoriteItem from \"./FavoriteItem\";\nimport { CatalogWrapper } from \"../AdvertCard/AdvertCard.styled\";\n\nconst FavoriteList = () => {\n  const storedFavorite = localStorage.getItem(\"favorite\");\n  const initialFavorite = storedFavorite ? JSON.parse(storedFavorite) : [];\n\n  const { favorite, removeFavoriteById } = useFavoriteAdverts(initialFavorite);\n  return (\n    <Container className=\"container favorite-container\" centerContent>\n      <CatalogWrapper>\n        {favorite.map((favoriteAdvert) => (\n          <Card key={favoriteAdvert.id}>\n            <FavoriteItem\n              key={favoriteAdvert.id}\n              favoriteAdvert={favoriteAdvert}\n              removeFavoriteById={removeFavoriteById}\n            />\n          </Card>\n        ))}\n      </CatalogWrapper>\n    </Container>\n  );\n};\n\nexport default FavoriteList;\n","import { useEffect, useState } from \"react\";\n\n\nexport const useFavoriteAdverts = (favoriteMovies) => {\n  const [favorite, setFavorite] = useState(favoriteMovies);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorite\", JSON.stringify(favorite));\n  }, [favorite]);\n\n  const removeFavoriteById = (id) => {\n    setFavorite((prevFavorite) =>\n      prevFavorite.filter((item) => item.id !== id)\n    );\n  };\n\n  return { favorite, removeFavoriteById, setFavorite };\n};","import FavoriteList from \"../components/Favorite/FavoriteList\";\n\nconst FavoritePage = () => {\n  return (\n    <section className=\"favorite-section\">\n      <FavoriteList />\n    </section>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["CardHeading","styled","Heading","_templateObject","_taggedTemplateLiteral","WrapperImg","CardHeader","_templateObject2","WrapperBody","CardBody","_templateObject3","FooterWrapper","CardFooter","_templateObject4","WrapperHeading","span","_templateObject5","Span","_templateObject6","PriceSpan","_templateObject7","CardText","p","_templateObject8","CardButton","button","_templateObject9","FavoriteButton","Button","_templateObject10","CatalogWrapper","SimpleGrid","_templateObject11","ButtonWrapper","div","_templateObject12","CardDetails","Card","ImageDetails","Image","CardDescription","DescriptionsHeading","AccessoriesList","List","Conditions","RentButton","SpanConditions","SpanConditionsAccent","_ref","advert","id","year","make","model","fuelConsumption","address","engineSize","type","description","functionalities","mileage","rentalPrice","img","_jsx","_Fragment","children","_jsxs","src","alt","marginBottom","map","item","ListItem","Overlay","setVisible","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","onClick","currentTarget","target","className","Icon","favoriteAdvert","removeFavoriteById","rentalCompany","firstFunctionalities","isVisible","setIsVisible","useState","toggleModal","alignSelf","boxSize","objectFit","borderRadius","Modal","AdvertDetails","FavoriteList","storedFavorite","localStorage","getItem","initialFavorite","JSON","parse","favorite","favoriteMovies","setFavorite","setItem","stringify","prevFavorite","filter","useFavoriteAdverts","Container","centerContent","FavoriteItem","FavoritePage"],"sourceRoot":""}